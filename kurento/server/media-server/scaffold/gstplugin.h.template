#ifndef _{{prefixUpperCase}}_{{nameSnakeUpperCase}}_H_
#define _{{prefixUpperCase}}_{{nameSnakeUpperCase}}_H_

#include <gst/video/gstvideofilter.h>

G_BEGIN_DECLS

#define {{prefixUpperCase}}_TYPE_{{nameSnakeUpperCase}} ({{prefixLowerCase}}_{{nameSnakeCase}}_get_type ())
#define {{prefixUpperCase}}_{{nameSnakeUpperCase}}(obj) \
  (G_TYPE_CHECK_INSTANCE_CAST ((obj), {{prefixUpperCase}}_TYPE_{{nameSnakeUpperCase}}, \
      {{prefixCamelCase}}{{nameCamelCase}}))
#define {{prefixUpperCase}}_{{nameSnakeUpperCase}}_CLASS(klass) \
  (G_TYPE_CHECK_CLASS_CAST ((klass), {{prefixUpperCase}}_TYPE_{{nameSnakeUpperCase}}, \
      {{prefixCamelCase}}{{nameCamelCase}}Class))
#define {{prefixUpperCase}}_IS_{{nameSnakeUpperCase}}(obj) \
  (G_TYPE_CHECK_INSTANCE_TYPE ((obj), {{prefixUpperCase}}_TYPE_{{nameSnakeUpperCase}}))
#define {{prefixUpperCase}}_IS_{{nameSnakeUpperCase}}_CLASS(klass) \
  (G_TYPE_CHECK_CLASS_TYPE ((klass), {{prefixUpperCase}}_TYPE_{{nameSnakeUpperCase}}))

typedef struct _{{prefixCamelCase}}{{nameCamelCase}} {{prefixCamelCase}}{{nameCamelCase}};
typedef struct _{{prefixCamelCase}}{{nameCamelCase}}Class {{prefixCamelCase}}{{nameCamelCase}}Class;
typedef struct _{{prefixCamelCase}}{{nameCamelCase}}Private {{prefixCamelCase}}{{nameCamelCase}}Private;

struct _{{prefixCamelCase}}{{nameCamelCase}} {
  GstVideoFilter base;
  {{prefixCamelCase}}{{nameCamelCase}}Private *priv;
};

struct _{{prefixCamelCase}}{{nameCamelCase}}Class {
  GstVideoFilterClass base_{{nameSnakeCase}}_class;
};

GType {{prefixLowerCase}}_{{nameSnakeCase}}_get_type (void);

gboolean {{prefixLowerCase}}_{{nameSnakeCase}}_plugin_init (GstPlugin *plugin);

G_END_DECLS

#endif // _{{prefixUpperCase}}_{{nameSnakeUpperCase}}_H_
